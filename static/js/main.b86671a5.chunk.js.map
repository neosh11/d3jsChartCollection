{"version":3,"sources":["components/Card/index.tsx","components/Charts/LineChart.tsx","constants/colors.ts","components/Charts/BarChart.tsx","components/Charts/ScatterChart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","children","className","DrawChart","data","x","y","Math","random","yAccessor","d","xAccessor","dimensions","margin","top","right","bottom","left","ref","renderChartFn","dependencies","useRef","useEffect","d3","current","useD3","svg","width","node","getBoundingClientRect","height","boundedWidth","boundedHeight","attr","yScale","domain","range","nice","xScale","lineGenerator","yAxisGenerator","select","append","xAxisGenerator","call","length","style","marginRight","marginLeft","transform","LineChart","colors","props","bins","value","thresholds","binsGenerator","console","log","bounds","binGroups","selectAll","enter","x0","barPadding","x1","filter","text","ticks","mean","html","BarChart","data2","drawDots","dat","col","dots","merge","ScatterChart","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b86671a5.chunk.js","sourcesContent":["import { FC } from 'react'\n\nconst Card: FC = ({ children }) => {\n  return (\n    <div className='flex justify-center w-full'>\n      <div className='w-11/12 shadow-md rounded-lg'>{children}</div>\n    </div>\n  )\n}\nexport default Card\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport Card from '../Card'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\n\nconst DrawChart = () => {\n  interface IPoint {\n    x: number\n    y: number\n  }\n  type TData = IPoint[]\n\n  const data: TData = [\n    { x: 1, y: 2 },\n    { x: 2, y: 3 },\n    { x: 3, y: 4 },\n    { x: 4, y: 5 },\n    { x: 5, y: 4 },\n    { x: 7, y: 2 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 }\n  ]\n\n  const yAccessor = (d: IPoint) => d.y\n  const xAccessor = (d: IPoint) => d.x\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 50,\n      left: 50\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([boundedHeight, 0]).nice()\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const lineGenerator = d3\n        .line<IPoint>()\n        .x(d => xScale(d.x))\n        .y(d => yScale(d.y))\n\n      const line = svg\n        .select('.bounds')\n        .append('path')\n        .attr('d', lineGenerator(data))\n        .attr('fill', 'none')\n        .attr('stroke', '#af9358')\n        .attr('stroke-width', 2)\n\n      const yAxisGenerator = d3.axisLeft(yScale)\n      const yAxis = svg.select('.bounds').append('g').call(yAxisGenerator)\n\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const xAxis = svg.select('.bounds').append('g').call(xAxisGenerator)\n    },\n    [data.length, dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst LineChart = () => {\n  return (\n    <Card>\n      <h2>Line Chart</h2>\n      <DrawChart />\n    </Card>\n  )\n}\n\nexport default LineChart\n","export const colors = {\n  ter: '#F46197',\n  sec: '#70AE6E',\n  prim: '#FFFDF7'\n}\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { colors } from '../../constants/colors'\nimport { IPoint } from '../../types/dataTypes'\nimport Card from '../Card'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\n\ninterface Props {\n  data: IPoint[]\n}\n\nconst DrawChart = (props: Props) => {\n  const data = props.data\n  const bucketSize = 4\n  const binsGenerator = d3\n    .bin<IPoint, number>()\n    .domain([0, d3.max(props.data, d => d.x)])\n    .value(d => d.x)\n    .thresholds(bucketSize)\n\n  const bins = binsGenerator(data)\n  console.log(data)\n\n  console.log(bins)\n\n  const yAccessor = (d: d3.Bin<IPoint, number>) => d.length\n  const xAccessor = (d: IPoint) => d.x\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 30,\n      right: 20,\n      bottom: 70,\n      left: 70\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      // For reaccess\n      const bounds = svg.select('.bounds')\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(bins, yAccessor)])\n        .range([boundedHeight, 0])\n        .nice()\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const binsGroup = bounds.append('g')\n      const binGroups = binsGroup.selectAll('g').data(bins).enter().append('g')\n      const barPadding = 10\n\n      const barRects = binGroups\n        .append('rect')\n        .attr('x', d => xScale(d.x0) + barPadding / 2)\n        .attr('y', d => yScale(yAccessor(d)))\n\n        .attr('width', d => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n        .attr('height', d => boundedHeight - yScale(yAccessor(d)))\n        .attr('fill', colors.sec)\n\n      // Bar text\n      const barText = binGroups\n        .filter(d => yAccessor(d) != 0)\n        .append('text')\n        .attr('x', d => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n        .attr('y', d => yScale(yAccessor(d)) - 5)\n        .text(yAccessor)\n        .style('text-anchor', 'middle')\n        .attr('fill', 'darkgrey')\n        .style('font-size', '12px')\n        .style('font-family', 'sans-serif')\n\n      // y axis label\n      const yAxisGenerator = d3.axisLeft(yScale).ticks(4)\n      const yAxis = svg.select('.bounds').append('g').call(yAxisGenerator)\n\n      const yAxisLabel = yAxis\n        .append('text')\n        .attr('x', -boundedHeight / 2)\n        .attr('y', '-3em')\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .text('Tomato')\n        .style('transform', 'rotate(-90deg)')\n        .style('text-anchor', 'middle')\n\n      // x axis label\n\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const xAxis = svg\n        .select('.bounds')\n        .append('g')\n        .call(xAxisGenerator)\n        .style('transform', `translateY(${boundedHeight}px)`)\n      const xAxisLabel = xAxis\n        .append('text')\n        .attr('x', boundedWidth / 2)\n        .attr('y', dimensions.margin.bottom - 10)\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .html('Potato')\n\n      // mean line\n      const mean = d3.mean(data, d => d.x)\n\n      const meanLine = bounds\n        .append('line')\n        .attr('x1', xScale(mean))\n        .attr('x2', xScale(mean))\n        .attr('y1', -15)\n        .attr('y2', boundedHeight)\n        .attr('stroke', 'maroon')\n        .attr('stroke-dasharray', '2px 4px')\n\n      const meanLabel = bounds\n        .append('text')\n        .attr('x', xScale(mean))\n        .attr('y', -20)\n        .text('mean')\n        .attr('fill', 'maroon')\n        .style('font-size', '12px')\n        .style('text-anchor', 'middle')\n    },\n    [data.length, dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst BarChart = (props: Props) => {\n  return (\n    <Card>\n      <h2>Bar Chart</h2>\n      <DrawChart data={props.data} />\n    </Card>\n  )\n}\n\nexport default BarChart\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { IPoint, TData } from '../../types/dataTypes'\nimport Card from '../Card'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\ninterface Props {\n  data: IPoint[]\n}\n\nconst DrawChart = (props: Props) => {\n  const data = props.data\n\n  const data2: TData = [{ x: Math.random() * 100, y: Math.random() * 100 }]\n\n  const yAccessor = (d: IPoint) => d.y\n  const xAccessor = (d: IPoint) => d.x\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 70\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([boundedHeight, 0]).nice()\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const drawDots = (dat, col) => {\n        const dots = svg.select('.bounds').selectAll<SVGCircleElement, d3.BaseType>('circle').data<IPoint>(dat)\n        dots\n          .enter()\n          .append('circle')\n          .merge(dots)\n          .attr('cx', d => xScale(xAccessor(d)))\n          .attr('cy', d => yScale(yAccessor(d)))\n          .attr('r', 5)\n          .attr('fill', col)\n      }\n\n      // testcircle\n      drawDots(data, 'red')\n      drawDots(data2, 'cornflowerblue')\n\n      // y axis label\n      const yAxisGenerator = d3.axisLeft(yScale).ticks(4)\n      const yAxis = svg.select('.bounds').append('g').call(yAxisGenerator)\n\n      const yAxisLabel = yAxis\n        .append('text')\n        .attr('x', -boundedHeight / 2)\n        .attr('y', '-3em')\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .text('Tomato')\n        .style('transform', 'rotate(-90deg)')\n        .style('text-anchor', 'middle')\n\n      // x axis label\n\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const xAxis = svg\n        .select('.bounds')\n        .append('g')\n        .call(xAxisGenerator)\n        .style('transform', `translateY(${boundedHeight}px)`)\n      const xAxisLabel = xAxis\n        .append('text')\n        .attr('x', boundedWidth / 2)\n        .attr('y', dimensions.margin.bottom - 10)\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .html('Potato')\n    },\n    [data.length, dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst ScatterChart = (props: Props) => {\n  return (\n    <Card>\n      <h2>Scatter Chart</h2>\n      <DrawChart data={props.data} />\n    </Card>\n  )\n}\n\nexport default ScatterChart\n","import React from 'react'\nimport './App.css'\nimport LineChart from './components/Charts/LineChart'\nimport BarChart from './components/Charts/BarChart'\nimport ScatterChart from './components/Charts/ScatterChart'\nimport { TData } from './types/dataTypes'\n\nfunction App() {\n  const data: TData = [\n    { x: 1, y: 2 },\n    { x: 2, y: 3 },\n    { x: 3, y: 4 },\n    { x: 4, y: 5 },\n    { x: 5, y: 4 },\n    { x: 7, y: 2 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 },\n    { x: Math.random() * 100, y: Math.random() * 100 }\n  ]\n\n  return (\n    <div className=\"space-y-5\">\n      <div className='shadow-lg p-5 flex items-stretch bg-sec justify-center'>\n        <h1 className='text-prim'>Hello D3JS</h1>\n      </div>\n      <BarChart data={data} />\n      <ScatterChart data={data} />\n      <LineChart />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}