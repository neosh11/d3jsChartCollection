{"version":3,"sources":["components/Card/index.tsx","components/Charts/LineChart.tsx","constants/colors.ts","components/Button/index.tsx","components/Charts/BarChart.tsx","components/Charts/ScatterChart.tsx","components/Charts/BasicInteractions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","children","className","DrawChart","data","yAccessor","d","y","xAccessor","x","dimensions","margin","top","right","bottom","left","ref","renderChartFn","dependencies","useRef","useEffect","d3","current","useD3","svg","width","node","getBoundingClientRect","height","boundedWidth","boundedHeight","attr","yScale","domain","range","nice","xScale","lineGenerator","yAxisGenerator","select","append","xAxisGenerator","call","length","style","marginRight","marginLeft","transform","LineChart","colors","Button","btnClass","block","color","text","loading","props","blockClass","disabledClass","disabled","join","bins","thresholds","binsGenerator","bounds","updateTransition","duration","ease","ticks","mean","binGroups","selectAll","tooltipG","tooltip","mouseover","e","html","this","mousemove","mouseleave","init","enter","on","merge","transition","x0","x1","overflow","BarChart","useState","map","metric","setData","onClick","data2","Math","random","drawDots","dat","col","dots","ScatterChart","loc","console","log","id","BasicInteractions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OASeA,EAPE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,yCAAf,SAAyDD,OCgBzDE,G,OAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAObC,EAAY,SAACC,GAAD,OAAeA,EAAEC,GAC7BC,EAAY,SAACF,GAAD,OAAeA,EAAEG,GAK7BC,EAAa,CACjBC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAIJC,EAtCM,SAACC,EAAmCC,GAChD,IAAMF,EAAMG,iBAAO,MAQnB,OANAC,qBAAU,WAER,OADAH,EAAcI,IAAUL,EAAIM,UACrB,eAGN,CAACL,EAAeC,IACZF,EA6BKO,EACV,SAACC,GAAiE,IAAD,IACzDC,EAAK,UAAGD,EAAIE,cAAP,aAAG,EAAYC,wBAAwBF,MAC5CG,EAAM,UAAGJ,EAAIE,cAAP,aAAG,EAAYC,wBAAwBC,OACnD,GAAKH,GAAUG,EAAf,CAEA,IAAMC,EAAeJ,EAAQf,EAAWC,OAAOI,KAAOL,EAAWC,OAAOE,MAClEiB,EAAgBF,EAASlB,EAAWC,OAAOC,IAAMF,EAAWC,OAAOG,OAEzEU,EAAIO,KAAK,QAASN,GAAOM,KAAK,SAAUH,GAExC,IAAMI,EAASX,MAAiBY,OAAOZ,IAAUjB,EAAMC,IAAY6B,MAAM,CAACJ,EAAe,IAAIK,OACvFC,EAASf,MAAiBY,OAAOZ,IAAUjB,EAAMI,IAAY0B,MAAM,CAAC,EAAGL,IAAeM,OAEtFE,EAAgBhB,MAEnBZ,GAAE,SAAAH,GAAC,OAAI8B,EAAO9B,EAAEG,MAChBF,GAAE,SAAAD,GAAC,OAAI0B,EAAO1B,EAAEC,MAUb+B,GAROd,EACVe,OAAO,WACPC,OAAO,QACPT,KAAK,IAAKM,EAAcjC,IACxB2B,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GAEDV,IAAYW,IAG7BS,GAFQjB,EAAIe,OAAO,WAAWC,OAAO,KAAKE,KAAKJ,GAE9BjB,IAAce,IACvBZ,EAAIe,OAAO,WAAWC,OAAO,KAAKE,KAAKD,MAEvD,CAACrC,EAAKuC,OAAQjC,IAGhB,OACE,qBACEM,IAAKA,EACL4B,MAAO,CACLhB,OAAQ,IACRH,MAAO,OACPoB,YAAa,MACbC,WAAY,OANhB,SASE,mBACE5C,UAAU,SACV0C,MAAO,CACLG,UAAU,aAAD,OAAerC,EAAWC,OAAOI,KAAjC,eAA4CL,EAAWC,OAAOC,IAA9D,cAgBJoC,EATG,SAAC,GAAqB,IAAnB5C,EAAkB,EAAlBA,KACnB,OACE,eAAC,EAAD,WACE,4CACA,cAAC,EAAD,CAAWA,KAAMA,Q,QCvGV6C,EACN,UADMA,EAEN,U,gBCsCQC,EA9BiB,SAAC,GAAwE,IACnGC,EAD6BC,EAAqE,EAArEA,MAAqE,IAA9DC,aAA8D,MAAtD,OAAsD,OAA9CC,KAA8C,EAAhCC,gBAAgC,SAAZC,EAAY,kDAExF,SAAVH,EAAkBF,EAAW,qCACd,UAAVE,EAAmBF,EAAW,sCACpB,WAAVE,IAAoBF,EAAW,oEAExC,IAIMM,EAAaL,EAAQ,SAAW,GAKhCM,EAAgBH,EAAU,gCAAkC,GAElE,OACE,qBAAKrD,UAAU,WAAf,SACE,kDACMsD,GADN,IAEEG,SAAUJ,EACVrD,UAAW,CAff,kHAeyBiD,EATT,aAS8BM,EAAYC,GAAeE,KAAK,KAH5E,SAKGJ,EAAMvD,eCXTE,EAAY,SAACqD,GACjB,IAAMpD,EAAOoD,EAAMpD,KAObyD,EALgBxC,MAEnBY,OAAO,CAAC,EAAGZ,IAAOmC,EAAMpD,QACxB0D,WAJgB,EAMNC,CAAc3D,GAErBC,EAAY,SAACC,GAAD,OAA+BA,EAAEqC,QAC7CnC,EAAY,SAACF,GAAD,OAAeA,GAK3BI,EACI,CACNE,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAIJC,EAzCM,SAACC,EAAmCC,GAChD,IAAMF,EAAMG,iBAAO,MAQnB,OANAC,qBAAU,WAER,OADAH,EAAcI,IAAUL,EAAIM,UACrB,eAGN,CAACL,EAAeC,IACZF,EAgCKO,EACV,SAACC,GAAiE,IAAD,IACzDC,EAAK,UAAGD,EAAIE,cAAP,aAAG,EAAYC,wBAAwBF,MAC5CG,EAAM,UAAGJ,EAAIE,cAAP,aAAG,EAAYC,wBAAwBC,OACnD,GAAKH,GAAUG,EAAf,CAGA,IAAMoC,EAASxC,EAAIe,OAAO,WAEpBV,EAAeJ,EAAQf,EAAkBK,KAAOL,EAAkBG,MAClEiB,EAAgBF,EAASlB,EAAkBE,IAAMF,EAAkBI,OAEzEU,EAAIO,KAAK,QAASN,GAAOM,KAAK,SAAUH,GAExC,IAAMI,EAASX,MAEZY,OAAO,CAAC,EAAGZ,IAAOwC,EAAMxD,KACxB6B,MAAM,CAACJ,EAAe,IACtBK,OAEGC,EAASf,MAAiBY,OAAOZ,IAAUjB,EAAMI,IAAY0B,MAAM,CAAC,EAAGL,IAAeM,OAItF8B,EAAmB5C,MAAgB6C,SAAS,KAAKC,KAAK9C,KAGtDoB,EAAiBpB,IAAce,GAC/BE,EAAiBjB,IAAYW,GAAQoC,MAAM,GAC3CC,EAAOhD,IAAQjB,GACfkE,EAAYN,EAAOO,UAAkD,QAAQnE,KAAKyD,GAGlFW,EAAWhD,EAAIe,OAAO,aAAaC,OAAO,KAAKI,MAAM,UAAW,GAEtE4B,EAAShC,OAAO,QAAQT,KAAK,SAAU,IAAIA,KAAK,QAAS,KAAKA,KAAK,IAAK,GAAGA,KAAK,KAAM,IAAIA,KAAK,OAAQkB,GAEvG,IAAMwB,EAAUD,EACbhC,OAAO,QACPT,KAAK,QAAS,WACda,MAAM,mBAAoB,SAC1BA,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBA,MAAM,gBAAiB,OACvBb,KAAK,IAAK,IACVA,KAAK,IAAK,MAEP2C,EAAY,SAAUC,EAAGrE,GAC7BkE,EAASzC,KAAK,YAAa,cAAgBV,IAAWsD,GAAG,GAAK,IAAM,KAAOtD,IAAWsD,GAAG,GAAK,IAAM,KACpGF,EAAQG,KAAK,UAAYtE,EAAEqC,QAC3BtB,IAAUwD,MAAMjC,MAAM,OAAQK,GAC9B5B,IAAUwD,MAAMjC,MAAM,SAAU,SAASA,MAAM,UAAW,GAC1D4B,EAAS5B,MAAM,UAAW,IAEtBkC,EAAY,SAAUH,EAAGrE,GAC7BkE,EAASzC,KAAK,YAAa,cAAgBV,IAAWsD,GAAG,GAAK,IAAM,KAAOtD,IAAWsD,GAAG,GAAK,IAAM,KACpGF,EAAQG,KAAK,UAAYtE,EAAEqC,SAEvBoC,EAAa,WACjBP,EAAS5B,MAAM,UAAW,GAC1BvB,IAAUwD,MAAMjC,MAAM,OAAQK,GAC9B5B,IAAUwD,MAAMjC,MAAM,SAAU,QAAQA,MAAM,UAAW,KAkC3D,GAAkB,GAAdY,EAAMwB,KACMhB,EAAOxB,OAAO,KAAKT,KAAK,QAAS,UAAUW,KAAKJ,GAI3DE,OAAO,QACPT,KAAK,KAAMD,EAAgB,GAC3BC,KAAK,IAAK,QACVA,KAAK,OAAQ,SACba,MAAM,YAAa,SACnBU,KAAK,UACLV,MAAM,YAAa,kBACnBA,MAAM,cAAe,UAIVoB,EACXxB,OAAO,KACPT,KAAK,QAAS,UACdW,KAAKD,GACLG,MAAM,YAJK,qBAIsBd,EAJtB,QAQXU,OAAO,QACPT,KAAK,IAAKF,EAAe,GACzBE,KAAK,IAAKrB,EAAkBI,OAAS,IACrCiB,KAAK,OAAQ,SACba,MAAM,YAAa,SACnBgC,KAAK,UAKRZ,EACGxB,OAAO,QACPT,KAAK,QAAS,YACdA,KAAK,KAAMK,EAAOiC,IAClBtC,KAAK,KAAMK,EAAOiC,IAClBtC,KAAK,MAAO,IACZA,KAAK,KAAMD,GACXC,KAAK,SAAU,UACfA,KAAK,mBAAoB,WAG5BiC,EACGxB,OAAO,QACPT,KAAK,QAAS,iBACdA,KAAK,IAAKK,EAAOiC,IACjBtC,KAAK,KAAM,IACXuB,KAAK,QACLvB,KAAK,OAAQ,UACba,MAAM,YAAa,QACnBA,MAAM,cAAe,UAlFxB0B,EACGW,QACAzC,OAAO,QACP0C,GAAG,aAAcR,GACjBQ,GAAG,WAAYH,GACfG,GAAG,YAAaJ,GAChBlC,MAAM,OAAQK,GACdkC,MAAMb,GACNc,WAAWnB,GACXlC,KAAK,KAAK,SAAAzB,GAAC,OAAI8B,EAAO9B,EAAE+E,IArDV,MAsDdtD,KAAK,KAAK,SAAAzB,GAAC,OAAI0B,EAAO3B,EAAUC,OAChCyB,KAAK,UAAU,SAAAzB,GAAC,OAAIe,IAAO,CAACS,EAAgBE,EAAO3B,EAAUC,SAC7DyB,KAAK,SAAS,SAAAzB,GAAC,OAAIe,IAAO,CAAC,EAAGe,EAAO9B,EAAEgF,IAAMlD,EAAO9B,EAAE+E,IAxDxC,QA2DjBrB,EAAOzB,OAAoB,WAAW6C,WAAWnB,GAAkBvB,KAAKD,GAExEuB,EAAOzB,OAAoB,WAAW6C,WAAWnB,GAAkBvB,KAAKJ,GAGxE0B,EAAOzB,OAAuB,kBAAkB6C,WAAWnB,GAAkBlC,KAAK,IAAKK,EAAOiC,IAE9FL,EACGzB,OAAuB,aACvB6C,WAAWnB,GACXlC,KAAK,KAAMK,EAAOiC,IAClBtC,KAAK,KAAMK,EAAOiC,OA4DzB,CAACjE,IAGH,OACE,sBACEY,IAAKA,EACL4B,MAAO,CACLhB,OAAQ,IACRH,MAAO,OACPoB,YAAa,MACbC,WAAY,MACZyC,SAAU,WAPd,UAUE,mBACErF,UAAU,SACV0C,MAAO,CACLG,UAAU,aAAD,OAAerC,EAAkBK,KAAjC,eAA4CL,EAAkBE,IAA9D,UAGb,mBAAGV,UAAU,iBA8BJsF,EAzBE,SAAChC,GAAkB,IAAD,EACTiC,mBAAS,CAAErF,KAAMoD,EAAMpD,KAAKsF,KAAI,SAAAjF,GAAC,OAAIA,EAAEA,KAAIkF,OAAQ,IAAKX,MAAM,IADrD,mBAC1B5E,EAD0B,KACpBwF,EADoB,KAOjC,OACE,eAAC,EAAD,WACE,2CACA,sBAAK1F,UAAU,mCAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,+BAAKE,EAAKuF,OAAV,UACA,cAAC,EAAD,CAAWvF,KAAMA,EAAKA,KAAM4E,KAAM5E,EAAK4E,UAEzC,qBAAK9E,UAAU,+DAAf,SACE,cAAC,EAAD,CAAQ2F,QAbA,WACM,MAAhBzF,EAAKuF,OAAgBC,EAAQ,CAAExF,KAAMoD,EAAMpD,KAAKsF,KAAI,SAAAjF,GAAC,OAAIA,EAAEF,KAAIoF,OAAQ,IAAKX,MAAM,IACjFY,EAAQ,CAAExF,KAAMoD,EAAMpD,KAAKsF,KAAI,SAAAjF,GAAC,OAAIA,EAAEA,KAAIkF,OAAQ,IAAKX,MAAM,KAWlC3B,MAAM,OAAhC,kCC7NJlD,EAAY,SAACqD,GACjB,IAAMpD,EAAOoD,EAAMpD,KAEb0F,EAAe,CAAC,CAAErF,EAAmB,IAAhBsF,KAAKC,SAAgBzF,EAAmB,IAAhBwF,KAAKC,WAElD3F,EAAY,SAACC,GAAD,OAAeA,EAAEC,GAC7BC,EAAY,SAACF,GAAD,OAAeA,EAAEG,GAK7BC,EAAa,CACjBC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAIJC,EAnCM,SAACC,EAAmCC,GAChD,IAAMF,EAAMG,iBAAO,MAQnB,OANAC,qBAAU,WAER,OADAH,EAAcI,IAAUL,EAAIM,UACrB,eAGN,CAACL,EAAeC,IACZF,EA0BKO,EACV,SAACC,GAAiE,IAAD,IACzDC,EAAK,UAAGD,EAAIE,cAAP,aAAG,EAAYC,wBAAwBF,MAC5CG,EAAM,UAAGJ,EAAIE,cAAP,aAAG,EAAYC,wBAAwBC,OACnD,GAAKH,GAAUG,EAAf,CAEA,IAAMC,EAAeJ,EAAQf,EAAWC,OAAOI,KAAOL,EAAWC,OAAOE,MAClEiB,EAAgBF,EAASlB,EAAWC,OAAOC,IAAMF,EAAWC,OAAOG,OAEzEU,EAAIO,KAAK,QAASN,GAAOM,KAAK,SAAUH,GAExC,IAAMI,EAASX,MAAiBY,OAAOZ,IAAUjB,EAAMC,IAAY6B,MAAM,CAACJ,EAAe,IAAIK,OACvFC,EAASf,MAAiBY,OAAOZ,IAAUjB,EAAMI,IAAY0B,MAAM,CAAC,EAAGL,IAAeM,OAEtF8D,EAAW,SAACC,EAAKC,GACrB,IAAMC,EAAO5E,EAAIe,OAAO,WAAWgC,UAAyC,UAAUnE,KAAa8F,GACnGE,EACGnB,QACAzC,OAAO,UACP2C,MAAMiB,GACNrE,KAAK,MAAM,SAAAzB,GAAC,OAAI8B,EAAO5B,EAAUF,OACjCyB,KAAK,MAAM,SAAAzB,GAAC,OAAI0B,EAAO3B,EAAUC,OACjCyB,KAAK,IAAK,GACVA,KAAK,OAAQoE,IAIlBF,EAAS7F,EAAM,OACf6F,EAASH,EAAO,kBAGhB,IAAMxD,EAAiBjB,IAAYW,GAAQoC,MAAM,GAe3C3B,GAdQjB,EAAIe,OAAO,WAAWC,OAAO,KAAKE,KAAKJ,GAGlDE,OAAO,QACPT,KAAK,KAAMD,EAAgB,GAC3BC,KAAK,IAAK,QACVA,KAAK,OAAQ,SACba,MAAM,YAAa,SACnBU,KAAK,UACLV,MAAM,YAAa,kBACnBA,MAAM,cAAe,UAIDvB,IAAce,IACvBZ,EACXe,OAAO,WACPC,OAAO,KACPE,KAAKD,GACLG,MAAM,YAJK,qBAIsBd,EAJtB,QAMXU,OAAO,QACPT,KAAK,IAAKF,EAAe,GACzBE,KAAK,IAAKrB,EAAWC,OAAOG,OAAS,IACrCiB,KAAK,OAAQ,SACba,MAAM,YAAa,SACnBgC,KAAK,aAEV,CAACxE,EAAKuC,OAAQjC,IAGhB,OACE,qBACEM,IAAKA,EACL4B,MAAO,CACLhB,OAAQ,IACRH,MAAO,OACPoB,YAAa,MACbC,WAAY,OANhB,SASE,mBACE5C,UAAU,SACV0C,MAAO,CACLG,UAAU,aAAD,OAAerC,EAAWC,OAAOI,KAAjC,eAA4CL,EAAWC,OAAOC,IAA9D,aAgBJyF,EATM,SAAC7C,GACpB,OACE,eAAC,EAAD,WACE,+CACA,cAAC,EAAD,CAAWpD,KAAMoD,EAAMpD,WC1GvBD,EAAY,WAIhB,IAAMO,EAAa,CACjBC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAIJC,EA7BM,SAACC,EAAmCC,GAChD,IAAMF,EAAMG,iBAAO,MAQnB,OANAC,qBAAU,WAER,OADAH,EAAcI,IAAUL,EAAIM,UACrB,eAGN,CAACL,EAAeC,IACZF,EAoBKO,EACV,SAACC,GAAiE,IAAD,IACzDC,EAAK,UAAGD,EAAIE,cAAP,aAAG,EAAYC,wBAAwBF,MAC5CG,EAAM,UAAGJ,EAAIE,cAAP,aAAG,EAAYC,wBAAwBC,OACnD,GAAKH,GAAUG,EAAf,CAEA,IAAMoC,EAASxC,EAAIe,OAAO,WAEpBV,EAAeJ,EAAQf,EAAWC,OAAOI,KAAOL,EAAWC,OAAOE,MAClEiB,EAAgBF,EAASlB,EAAWC,OAAOC,IAAMF,EAAWC,OAAOG,OAEzEU,EAAIO,KAAK,QAASN,GAAOM,KAAK,SAAUH,GACxC,IAAMxB,EAAgB,CACpB,CAAEkG,IAAK,EAAGjD,MAAO,OACjB,CAAEiD,IAAK,EAAGjD,MAAO,QACjB,CAAEiD,IAAK,EAAGjD,MAAO,SACjB,CAAEiD,IAAK,EAAGjD,MAAO,SAIbjB,GADSf,MAAiBY,OAAO,CAAC,EAAG,IAAIC,MAAM,CAACJ,EAAe,IAAIK,OAC1Dd,MAAiBY,OAAO,CAAC,EAAG7B,EAAKuC,SAAST,MAAM,CAAC,EAAGL,IAAeM,QAIjE6B,EAAOO,UAAkD,QAAQnE,KAAKA,GAEpF6E,QACAzC,OAAO,QAEPT,KAAK,KAAK,SAAAzB,GAAC,OAAI8B,EAAO9B,EAAEgG,QACxBvE,KAAK,IAAKV,IAAO,CAAC,GAAIS,EAAgBM,EAAO,IAAM,KACnDL,KAAK,SAAUV,IAAO,CAAC,EAAGe,EAAO,GATjB,MAUhBL,KAAK,QAASV,IAAO,CAAC,EAAGe,EAAO,GAVhB,MAWhBL,KAAK,OAAQ,aACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GAErBmD,GAAG,cAAc,SAAUP,EAAGvE,GAC7BmG,QAAQC,IAAIpG,GACZiB,IAAUwD,MAAMjC,MAAM,OAAQxC,EAAKiD,UAEpC6B,GAAG,YAAY,WACd7D,IAAUwD,MAAMjC,MAAM,OAAQ,mBAGpC,CAAClC,IAGH,OACE,sBACEM,IAAKA,EACL4B,MAAO,CACLhB,OAAQ,IACRH,MAAO,OACPoB,YAAa,MACbC,WAAY,OANhB,UASE,mBAAG2D,GAAG,UAAN,kBACA,mBACEvG,UAAU,SACV0C,MAAO,CACLG,UAAU,aAAD,OAAerC,EAAWC,OAAOI,KAAjC,eAA4CL,EAAWC,OAAOC,IAA9D,cAgBJ8F,EATW,WACxB,OACE,eAAC,EAAD,WACE,oDACA,cAAC,EAAD,QCnESC,MAhCf,WACE,IAAMvG,EAAc,CAClB,CAAEK,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,EAAGF,EAAG,GACX,CAAEE,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,UACjB,CAAEvF,EAAG,GAAIF,EAAmB,IAAhBwF,KAAKC,WAGnB,OACE,sBAAK9F,UAAU,YAAf,UACE,qBAAKA,UAAU,yDAAf,SACE,oBAAIA,UAAU,YAAd,0BAEF,cAAC,EAAD,IACA,cAAC,EAAD,CAAUE,KAAMA,IAChB,cAAC,EAAD,CAAcA,KAAMA,IACpB,cAAC,EAAD,CAAWA,KAAMA,QCrBRwG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f881632.chunk.js","sourcesContent":["import { FC } from 'react'\n\nconst Card: FC = ({ children }) => {\n  return (\n    <div className='flex justify-center w-full'>\n      <div className='w-11/12 shadow-md rounded-lg space-y-2'>{children}</div>\n    </div>\n  )\n}\nexport default Card\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport Card from '../Card'\nimport { IPoint } from '../../types/dataTypes'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\n\ninterface Props {\n  data: IPoint[]\n}\n\nconst DrawChart = ({ data }: Props) => {\n  interface IPoint {\n    x: number\n    y: number\n  }\n  type TData = IPoint[]\n\n  const yAccessor = (d: IPoint) => d.y\n  const xAccessor = (d: IPoint) => d.x\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 50,\n      left: 50\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([boundedHeight, 0]).nice()\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const lineGenerator = d3\n        .line<IPoint>()\n        .x(d => xScale(d.x))\n        .y(d => yScale(d.y))\n\n      const line = svg\n        .select('.bounds')\n        .append('path')\n        .attr('d', lineGenerator(data))\n        .attr('fill', 'none')\n        .attr('stroke', '#af9358')\n        .attr('stroke-width', 2)\n\n      const yAxisGenerator = d3.axisLeft(yScale)\n      const yAxis = svg.select('.bounds').append('g').call(yAxisGenerator)\n\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const xAxis = svg.select('.bounds').append('g').call(xAxisGenerator)\n    },\n    [data.length, dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst LineChart = ({ data }: Props) => {\n  return (\n    <Card>\n      <h2>Line Chart</h2>\n      <DrawChart data={data} />\n    </Card>\n  )\n}\n\nexport default LineChart\n","export const colors = {\n  ter: '#F46197',\n  sec: '#70AE6E',\n  prim: '#FFFDF7'\n}\n","import { FC, MouseEventHandler } from 'react'\n\ninterface ButtonProps {\n  color?: 'blue' | 'black' | 'purple'\n  type?: 'button' | 'submit' | 'reset'\n  block?: boolean\n  text?: boolean\n  loading?: boolean\n  onClick?: MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>\n}\nconst Button: FC<ButtonProps> = ({ block, color = 'blue', text = false, loading = false, ...props }) => {\n  let btnClass\n  if (color === 'blue') btnClass = 'btn-large bg-blue focus:ring-white'\n  else if (color === 'black') btnClass = 'btn-large bg-black focus:ring-white'\n  else if (color === 'purple') btnClass = 'text-link-off bg-sec hover:bg-prim hover:text-link-on rounded-md'\n  // default class\n  const classes =\n    'w-full px-6 py-2 rounded-lg hover:ring-1 hover:ring-opacity-40 ring-offset-2 focus:ring-1 focus:ring-opacity-40'\n\n  // if type is block\n  const blockClass = block ? 'w-full' : ''\n\n  // assign classes based on button variant\n  const textClass = 'text-white'\n\n  const disabledClass = loading ? 'cursor-not-allowed opacity-50' : ''\n\n  return (\n    <div className='relative'>\n      <button\n        {...props}\n        disabled={loading}\n        className={[classes, btnClass, textClass, blockClass, disabledClass].join(' ')}\n      >\n        {props.children}\n      </button>\n    </div>\n  )\n}\n\nexport default Button\n","import React, { useEffect, useRef, useState } from 'react'\nimport * as d3 from 'd3'\nimport { colors } from '../../constants/colors'\nimport { IPoint } from '../../types/dataTypes'\nimport Card from '../Card'\nimport Button from '../Button'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\n\ninterface Props {\n  data: IPoint[]\n}\n\nconst DrawChart = (props: { data: number[]; init: boolean }) => {\n  const data = props.data\n  const bucketSize = 4\n  const binsGenerator = d3\n    .bin<number, number>()\n    .domain([0, d3.max(props.data)])\n    .thresholds(bucketSize)\n\n  const bins = binsGenerator(data)\n\n  const yAccessor = (d: d3.Bin<number, number>) => d.length\n  const xAccessor = (d: number) => d\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 30,\n      right: 20,\n      bottom: 70,\n      left: 70\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      // For reaccess\n      const bounds = svg.select('.bounds')\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(bins, yAccessor)])\n        .range([boundedHeight, 0])\n        .nice()\n\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const barPadding = 10\n\n      const updateTransition = d3.transition().duration(600).ease(d3.easeBackIn)\n\n      // const binsGroup = bounds.append('g')\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const yAxisGenerator = d3.axisLeft(yScale).ticks(4)\n      const mean = d3.mean(data)\n      const binGroups = bounds.selectAll<SVGRectElement, d3.Bin<number, number>>('rect').data(bins)\n\n      // create a tooltip\n      const tooltipG = svg.select('.tooltipG').append('g').style('opacity', 0)\n\n      tooltipG.append('rect').attr('height', 50).attr('width', 100).attr('x', 0).attr('y', -25).attr('fill', colors.sec)\n\n      const tooltip = tooltipG\n        .append('text')\n        .attr('class', 'tooltip')\n        .style('background-color', 'white')\n        .style('border', 'solid')\n        .style('border-width', '2px')\n        .style('border-radius', '5px')\n        .attr('x', 20)\n        .attr('y', 25 / 2)\n\n      const mouseover = function (e, d) {\n        tooltipG.attr('transform', 'translate(' + (d3.pointer(e)[0] - 10) + ',' + (d3.pointer(e)[1] - 10) + ')')\n        tooltip.html('Total: ' + d.length)\n        d3.select(this).style('fill', colors.ter)\n        d3.select(this).style('stroke', 'black').style('opacity', 1)\n        tooltipG.style('opacity', 1)\n      }\n      const mousemove = function (e, d) {\n        tooltipG.attr('transform', 'translate(' + (d3.pointer(e)[0] - 10) + ',' + (d3.pointer(e)[1] - 10) + ')')\n        tooltip.html('Total: ' + d.length)\n      }\n      const mouseleave = function () {\n        tooltipG.style('opacity', 0)\n        d3.select(this).style('fill', colors.sec)\n        d3.select(this).style('stroke', 'none').style('opacity', 0.8)\n      }\n\n      const updateBars = () => {\n        // barRects\n        binGroups\n          .enter()\n          .append('rect')\n          .on('mouseenter', mouseover)\n          .on('mouseout', mouseleave)\n          .on('mousemove', mousemove)\n          .style('fill', colors.sec)\n          .merge(binGroups)\n          .transition(updateTransition)\n          .attr('x', d => xScale(d.x0) + barPadding)\n          .attr('y', d => yScale(yAccessor(d)))\n          .attr('height', d => d3.max([boundedHeight - yScale(yAccessor(d))]))\n          .attr('width', d => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n\n        // x-axis\n        bounds.select<SVGGElement>('.x-axis').transition(updateTransition).call(xAxisGenerator)\n        // yAxis\n        bounds.select<SVGGElement>('.y-axis').transition(updateTransition).call(yAxisGenerator)\n\n        // meanLineLabel\n        bounds.select<SVGTextElement>('.meanLineLabel').transition(updateTransition).attr('x', xScale(mean))\n        // meanline\n        bounds\n          .select<SVGLineElement>('.meanLine')\n          .transition(updateTransition)\n          .attr('x1', xScale(mean))\n          .attr('x2', xScale(mean))\n      }\n\n      if (props.init == true) {\n        const yAxis = bounds.append('g').attr('class', 'y-axis').call(yAxisGenerator)\n\n        // yAxisLabel\n        yAxis\n          .append('text')\n          .attr('x', -boundedHeight / 2)\n          .attr('y', '-3em')\n          .attr('fill', 'black')\n          .style('font-size', '1.4em')\n          .text('Tomato')\n          .style('transform', 'rotate(-90deg)')\n          .style('text-anchor', 'middle')\n\n        // x axis label\n\n        const xAxis = bounds\n          .append('g')\n          .attr('class', 'x-axis')\n          .call(xAxisGenerator)\n          .style('transform', `translateY(${boundedHeight}px)`)\n\n        // xAxisLabel\n        xAxis\n          .append('text')\n          .attr('x', boundedWidth / 2)\n          .attr('y', dimensions.margin.bottom - 10)\n          .attr('fill', 'black')\n          .style('font-size', '1.4em')\n          .html('Potato')\n\n        // mean line\n\n        // meanLine\n        bounds\n          .append('line')\n          .attr('class', 'meanLine')\n          .attr('x1', xScale(mean))\n          .attr('x2', xScale(mean))\n          .attr('y1', -15)\n          .attr('y2', boundedHeight)\n          .attr('stroke', 'maroon')\n          .attr('stroke-dasharray', '2px 4px')\n\n        //  meanLabel\n        bounds\n          .append('text')\n          .attr('class', 'meanLineLabel')\n          .attr('x', xScale(mean))\n          .attr('y', -20)\n          .text('mean')\n          .attr('fill', 'maroon')\n          .style('font-size', '12px')\n          .style('text-anchor', 'middle')\n      }\n      updateBars()\n    },\n    [data]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px',\n        overflow: 'visible'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n      <g className='tooltipG' />\n    </svg>\n  )\n}\n\nconst BarChart = (props: Props) => {\n  const [data, setData] = useState({ data: props.data.map(x => x.x), metric: 'x', init: true })\n\n  const onClick = () => {\n    if (data.metric === 'x') setData({ data: props.data.map(x => x.y), metric: 'y', init: false })\n    else setData({ data: props.data.map(x => x.x), metric: 'x', init: false })\n  }\n  return (\n    <Card>\n      <h2>Bar Chart</h2>\n      <div className='flex md:flex-row flex-col h-full'>\n        <div className='md:w-3/4 space-y-2'>\n          <h3>{data.metric} map</h3>\n          <DrawChart data={data.data} init={data.init} />\n        </div>\n        <div className='md:w-1/4 h-full content-center flex justify-center flex-wrap'>\n          <Button onClick={onClick} color='blue'>\n            Change axis\n          </Button>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default BarChart\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { IPoint, TData } from '../../types/dataTypes'\nimport Card from '../Card'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\ninterface Props {\n  data: IPoint[]\n}\n\nconst DrawChart = (props: Props) => {\n  const data = props.data\n\n  const data2: TData = [{ x: Math.random() * 100, y: Math.random() * 100 }]\n\n  const yAccessor = (d: IPoint) => d.y\n  const xAccessor = (d: IPoint) => d.x\n\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 70\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n\n      const yScale = d3.scaleLinear().domain(d3.extent(data, yAccessor)).range([boundedHeight, 0]).nice()\n      const xScale = d3.scaleLinear().domain(d3.extent(data, xAccessor)).range([0, boundedWidth]).nice()\n\n      const drawDots = (dat, col) => {\n        const dots = svg.select('.bounds').selectAll<SVGCircleElement, d3.BaseType>('circle').data<IPoint>(dat)\n        dots\n          .enter()\n          .append('circle')\n          .merge(dots)\n          .attr('cx', d => xScale(xAccessor(d)))\n          .attr('cy', d => yScale(yAccessor(d)))\n          .attr('r', 5)\n          .attr('fill', col)\n      }\n\n      // testcircle\n      drawDots(data, 'red')\n      drawDots(data2, 'cornflowerblue')\n\n      // y axis label\n      const yAxisGenerator = d3.axisLeft(yScale).ticks(4)\n      const yAxis = svg.select('.bounds').append('g').call(yAxisGenerator)\n\n      const yAxisLabel = yAxis\n        .append('text')\n        .attr('x', -boundedHeight / 2)\n        .attr('y', '-3em')\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .text('Tomato')\n        .style('transform', 'rotate(-90deg)')\n        .style('text-anchor', 'middle')\n\n      // x axis label\n\n      const xAxisGenerator = d3.axisBottom(xScale)\n      const xAxis = svg\n        .select('.bounds')\n        .append('g')\n        .call(xAxisGenerator)\n        .style('transform', `translateY(${boundedHeight}px)`)\n      const xAxisLabel = xAxis\n        .append('text')\n        .attr('x', boundedWidth / 2)\n        .attr('y', dimensions.margin.bottom - 10)\n        .attr('fill', 'black')\n        .style('font-size', '1.4em')\n        .html('Potato')\n    },\n    [data.length, dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst ScatterChart = (props: Props) => {\n  return (\n    <Card>\n      <h2>Scatter Chart</h2>\n      <DrawChart data={props.data} />\n    </Card>\n  )\n}\n\nexport default ScatterChart\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport Card from '../Card'\nimport { IPoint } from '../../types/dataTypes'\n\nconst useD3 = (renderChartFn: (svg: any) => void, dependencies: React.DependencyList | undefined) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current))\n    return () => {\n      return\n    }\n  }, [renderChartFn, dependencies])\n  return ref\n}\ninterface IData {\n  loc: number\n  color: string\n}\n\nconst DrawChart = () => {\n  //   const wrapper = d3.select('#wrapper')\n  //   const svg = wrapper.append('svg')\n\n  const dimensions = {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 50,\n      left: 50\n    }\n  }\n\n  const ref = useD3(\n    (svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>) => {\n      const width = svg.node()?.getBoundingClientRect().width\n      const height = svg.node()?.getBoundingClientRect().height\n      if (!width || !height) return\n\n      const bounds = svg.select('.bounds')\n\n      const boundedWidth = width - dimensions.margin.left - dimensions.margin.right\n      const boundedHeight = height - dimensions.margin.top - dimensions.margin.bottom\n\n      svg.attr('width', width).attr('height', height)\n      const data: IData[] = [\n        { loc: 0, color: 'red' },\n        { loc: 1, color: 'blue' },\n        { loc: 2, color: 'green' },\n        { loc: 3, color: 'pink' }\n      ]\n\n      const yScale = d3.scaleLinear().domain([0, 1]).range([boundedHeight, 0]).nice()\n      const xScale = d3.scaleLinear().domain([0, data.length]).range([0, boundedWidth]).nice()\n\n      const barPadding = 10\n\n      const recGroup = bounds.selectAll<SVGRectElement, d3.Bin<number, number>>('rect').data(data)\n      recGroup\n        .enter()\n        .append('rect')\n\n        .attr('x', d => xScale(d.loc))\n        .attr('y', d3.max([0, (boundedHeight - xScale(1)) / 2]))\n        .attr('height', d3.max([0, xScale(1) - barPadding]))\n        .attr('width', d3.max([0, xScale(1) - barPadding]))\n        .attr('fill', 'lightgrey')\n        .attr('stroke', '#af9358')\n        .attr('stroke-width', 2)\n        // .dispatch('mouseout')\n        .on('mouseenter', function (e, data) {\n          console.log(data)\n          d3.select(this).style('fill', data.color)\n        })\n        .on('mouseout', function () {\n          d3.select(this).style('fill', 'lightgrey')\n        })\n    },\n    [dimensions]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px'\n      }}\n    >\n      <g id='tooltip'>test</g>\n      <g\n        className='bounds'\n        style={{\n          transform: `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n        }}\n      />\n    </svg>\n  )\n}\n\nconst BasicInteractions = () => {\n  return (\n    <Card>\n      <h2>Basic Interactions</h2>\n      <DrawChart />\n    </Card>\n  )\n}\n\nexport default BasicInteractions\n","import React from 'react'\nimport './App.css'\nimport LineChart from './components/Charts/LineChart'\nimport BarChart from './components/Charts/BarChart'\nimport ScatterChart from './components/Charts/ScatterChart'\nimport BasicInteractions from './components/Charts/BasicInteractions'\nimport { TData } from './types/dataTypes'\n\nfunction App() {\n  const data: TData = [\n    { x: 1, y: 2 },\n    { x: 2, y: 3 },\n    { x: 3, y: 4 },\n    { x: 4, y: 5 },\n    { x: 5, y: 4 },\n    { x: 7, y: 2 },\n    { x: 10, y: Math.random() * 100 },\n    { x: 20, y: Math.random() * 100 },\n    { x: 30, y: Math.random() * 100 },\n    { x: 35, y: Math.random() * 100 },\n    { x: 40, y: Math.random() * 100 },\n    { x: 55, y: Math.random() * 100 },\n    { x: 70, y: Math.random() * 100 },\n    { x: 85, y: Math.random() * 100 },\n    { x: 95, y: Math.random() * 100 }\n  ]\n\n  return (\n    <div className='space-y-5'>\n      <div className='shadow-lg p-5 flex items-stretch bg-sec justify-center'>\n        <h1 className='text-prim'>Hello D3JS</h1>\n      </div>\n      <BasicInteractions />\n      <BarChart data={data} />\n      <ScatterChart data={data} />\n      <LineChart data={data} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}